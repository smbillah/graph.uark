<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Graph Drawing Service</title>
<script src="../scripts/jquery/js/jquery-1.7.2.min.js"></script>
<script src="../scripts/jquery/js/jquery-ui-1.8.20.custom.min.js"></script>
<script type="text/javascript" src="../scripts/d3/d3.v2.js"></script>
<link type='text/css' rel='stylesheet' href='../styles/force.css' />
<link type='text/css' rel='stylesheet' href="../styles/form.css" />
<link type='text/css' rel='stylesheet' href="../scripts/jquery/css/ui-lightness/jquery-ui-1.8.20.custom.css" />
<script type="text/javascript" src="../scripts/uark/autocomplete.js"></script>

</head>
<body>

	<script>
	//
	var hiddenElementID;
		
	//graph drawing funcitons
	var width = 900,
	    height = 600;
	var network_type=["coauthor", "citing", "cited"];
	var node_colors= ["rgb(174, 199, 232)" ,"rgb(255, 127, 14)","rgb(255, 187, 120)"];
	var selected_color;
	var color = d3.scale.category20();
	var force = d3.layout.force()
	    .charge(-130)
	    .gravity(.05)
	    .theta(.1)
	    .linkDistance(150)
	    .size([width, height])
	    ;
	
	function redraw(svg) {
		  //console.log("here", d3.event.translate, d3.event.scale);
		  svg.attr("transform",
		       " scale(" + d3.event.scale + ")"
		    //  +
		      //"translate(" + d3.event.translate + ")"
		  );
	};
	
	var divClone = $("#coauthor").html();
	var hiddenElementID="hiddenElementID";
	
	//search function
	$(document).ready(function(){
		autocomplete(hiddenElementID,"name");
		$( "#tabs" ).tabs({
			ajaxOptions: {
				error: function( xhr, status, index, anchor ) {
					$( anchor.hash ).html(
						"Couldn't load this tab. We'll try to fix this as soon as possible. ");
				}
			}
		});
		
		$("#draw").click(function(){
			var $tabs = $('#tabs').tabs();
			var selected = $tabs.tabs('option', 'selected'); // => 0
			network=network_type[selected];
			selected_color=node_colors[selected];
			draw($("#"+hiddenElementID).val(), network);
		});
	});
		
	//graph drawing function		
	function draw(node_id, network_type){
		    // render graphs
		    //var node_id= $('#'+hiddenElementID).val();
		    if (node_id) { 
		      $("#"+network_type).empty();
		    
		      var force = d3.layout.force()
			    .charge(-30)
			    .gravity(.05)
			    .theta(.1)
			    .linkDistance(150)
			    .size([width, height])
			    ;
			
			var svg = d3.select("#"+network_type).append("svg:svg")
    			.attr("width", width)
		    	.attr("height", height)
		    	//.attr("pointer-events", "all")
		    	//.append('svg:g')
		    		//.call(d3.behavior.zoom().on("zoom", 
		    			//	function(){redraw(svg);}))
		    	//.append('svg:g')
				;
			
	      
		      //library call
				d3.json("../rest/graphs/"+network_type+"/"+node_id, function(json) {
				  force
				      .nodes(json.nodes)
				      .links(json.links)
				      .linkDistance(function(d,i){return 50 + 150 * (-d.value+json.max_connection)/json.max_connection;})
				      .start();
				
				  var link = svg.selectAll("line.link")
				      .data(json.links)
				      .enter().append("svg:line")
				      .attr("class", "link")				      				      
				      .style("stroke-width", function(d) { return 2+ 5*d.value/json.max_connection; });
				  
				  link.append("title")
				  .text(function(d) { return d.value; });
				
				
				
				  var node = svg.selectAll("g.node")
		      		.data(json.nodes)
		    		.enter().append("svg:g")
		      		.attr("class", "node")		
		      		.call(force.drag)
		      		;
				  
				  node.append("svg:circle")					      
				      .attr("class", "node")
				      .attr("r", function(d){ return 10;})
				      .style("fill", function(d) { 
				    	  				if(d.web_id) 
				    	  					return selected_color;
				    	  				else 
				    	  					return "rgb(31, 119, 180)";})					      
				      ;
				  
				  node.append("svg:text")
				  	   .attr("class", "nodetext")
				  	   .attr("dx", 12)
				  	   .attr("dy", ".35em")
				  	   .text(function(d) { return d.name });
				
				  force.on("tick", function() {
				    link.attr("x1", function(d) { return d.source.x; })
				        .attr("y1", function(d) { return d.source.y; })
				        .attr("x2", function(d) { return d.target.x; })
				        .attr("y2", function(d) { return d.target.y; });
				
				    
				    node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
				  });
				});
		      
		   }else{
			   alert("No author is selected");
		   }
		    
		    
	};
	
	</script>
	
	

	<div id="container" style="width: 100%">
		<div id="menue" style="width: 30%; float:left;">
		<div class="searchbox" style="width:90%">
			<label for="name">Author's name: </label>
			<br> 			
			<input id="name"/>			
			<button id="draw">Draw</button>
		</div>
		<br>
		

		<div class="searchbox">
			<label for="log_name">Author's Profile <span class="small">(coming soon)</span>: </label>
			<br>
			<div class="ui-widget-content" id="log_name"  style="width:90%"></div>
		</div>
		
		</div>
				
		<div id="content" style="width:70%; float:left;">
			<div id="tabs">
				<ul>
					<li><a href="#coauthor">Co-Author Graph</a></li>
					<li><a href="#citing">Citing Authors Graph</a></li>
					<li><a href="#cited">Cited Authors Graph</a></li>
				</ul>
				<div id= "coauthor" ></div>
				<div id="citing"></div>
				<div id="cited"></div>
			</div>
			
			
		</div>
	</div>
	
</body>
</html>